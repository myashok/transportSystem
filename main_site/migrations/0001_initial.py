# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-11 11:28
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main_site.models
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('text', models.TextField(max_length=500)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Brief description')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('total_distance', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_fare', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=200)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(help_text='Format: +91-9912345678', max_length=128, unique=True, verbose_name='Phone Number')),
                ('emergency_contact', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Format: +91-9912345678', max_length=128, null=True, verbose_name='Emergency Contact')),
                ('address', models.TextField(blank=True, null=True)),
                ('blood_group', models.CharField(choices=[('O-', 'O-'), ('O+', 'O+'), ('A-', 'A-'), ('A+', 'A+'), ('B-', 'B-'), ('B+', 'B+'), ('AB-', 'AB-'), ('AB+', 'AB+')], max_length=5, verbose_name='Blood Group')),
                ('license_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='License number')),
                ('license_validity', models.DateField(blank=True, null=True, verbose_name='Valid till')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('picture', models.ImageField(default='default.png', help_text='If not provided, default will be used', upload_to=main_site.models.get_upload_path)),
            ],
            options={
                'ordering': ['license_validity'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(null=True)),
                ('repairing_cost', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('start_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_date', models.DateField()),
                ('expected_end_time', models.TimeField(blank=True, help_text='To ensure fair services to everyone, please provide expected end time', null=True)),
                ('no_of_persons_travelling', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('request_type', models.CharField(choices=[('Official', 'Official'), ('Personal', 'Personal')], default='Personal', max_length=50, verbose_name='Type of request(Official/Personal)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Brief Summary,with preferences(if any)')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='Remarks from transport cell')),
                ('source', models.CharField(max_length=200)),
                ('destination', models.CharField(max_length=200)),
                ('is_round_trip', models.BooleanField(default=False, verbose_name='Round Trip?')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=main_site.models.get_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('start_distance', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('end_distance', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1)])),
                ('rate', models.FloatField(default=0, verbose_name='Rate/km')),
                ('fare', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_site.Driver')),
                ('request', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='main_site.Request')),
                ('status', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='main_site.Status', verbose_name='Status of trip')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('registration_no', models.CharField(help_text='e.g - UP 15 D 1234', max_length=15, unique=True)),
                ('nickname', models.CharField(blank=True, help_text='e.g.- B3', max_length=50)),
                ('description', models.TextField(null=True)),
                ('seating_capacity', models.IntegerField(default=4, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_owned', models.BooleanField(default=True, help_text='Whether owned by IIITA or hired', verbose_name='Owned by institute?')),
                ('picture', models.ImageField(default='school-bus.png', help_text='If not provided, default will be taken', upload_to=main_site.models.get_upload_path)),
            ],
        ),
        migrations.AddField(
            model_name='trip',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_site.Vehicle'),
        ),
        migrations.AddField(
            model_name='request',
            name='status',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='main_site.Status', verbose_name='Status of Request'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Requested by'),
        ),
        migrations.AddField(
            model_name='maintenance',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_site.Vehicle', verbose_name='Vehicle to repair'),
        ),
        migrations.AddField(
            model_name='bill',
            name='request',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_site.Request'),
        ),
    ]
